paths:
  /api/users/:
    get:
      summary: Obtiene la información de todos los usuarios
      tags:
        - Users
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  payload:
                    type: array
                    items:
                      $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor
  /api/users/{uid}:
    get:
      summary: Obtiene un usuario por su Id
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: Id del usuario solicitado
        schema:
          type: string        
      responses:
        "200":
          description: Se obtiene el usuario solicitado
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  payload:
                    type: object
                    properties:
                      user:
                        $ref: '#components/schemas/User'
        "500":
          description: Error interno del servidor
    put:
      summary: Actualiza un usuario por su Id
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: Id del usuario a actualizar
        schema:
          type: string        
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/createUser'
      responses:
        "200":
          description: Usuario actualizado
        "500":
          description: Error interno del servidor
    delete:
      summary: Elimina un usuario por su Id
      tags:
        - Users
      parameters:
      - name: uid
        in: path
        required: true
        description: Id del usuario a eliminar
        schema:
          type: string  
      responses:
        "200":
          description: Usuario eliminado
        "500":
          description: Error interno del servidor

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id generado automáticamente
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico
        password: 
          type: string
          description: Contraseña de acceso  
        role:
          type: string
          description: Rol del usuario (user/admin)
      example:
        _id: ObjectId("689a9bf99bbcff2332ef01cf")
        first_name: Jordi
        last_name: Bustamante Quintanilla
        email: jordi_BustamanteQuintanilla14@hotmail.com
        password: 123
        role: user
  requestBodies:
    createUser:
      type: object
      properties:
        first_name:
          type: string
          description: Nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Correo electrónico
        password:
          type: string
          description: Contraseña de acceso
        role:
          type: string
          description: Rol del usuario (user/admin)
      example:
        first_name: Jordi
        last_name: Bustamante Quintanilla
        email: jordi_BustamanteQuintanilla14@hotmail.com
        password: 123
        role: user (opcional, por defecto es "user")
      description: Datos para crear un usuario